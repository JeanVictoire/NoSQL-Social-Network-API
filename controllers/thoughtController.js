const{User:User,Thought:Thought}=require("../models"),thoughtController={getAllThoughts(t,s){Thought.find({}).then((t=>s.json(t))).catch((t=>{console.log(t),s.status(400)}))},getThoughtById({params:t},s){Thought.findOne({_id:t.id}).then((t=>{t?s.json(t):s.status(404).json({message:"Not a single thought was found with this ID"})})).catch((t=>console.log(t)))},createThought({body:t},s){Thought.create(t).then((({_id:s})=>(console.log(s),User.findOneAndUpdate({_id:t.userId},{$push:{thoughts:s}},{new:!0})))).then((t=>{t?s.json(t):s.status(404).json({message:"Not a single thought was found with this ID"})})).catch((t=>s.json(t)))},updateThought({params:t,body:s},o){Thought.findOneAndUpdate({_id:t.id},s,{new:!0}).then((t=>{t?o.json(t):o.status(404).json({message:"Not a single thought was found with this ID"})})).catch((t=>{console.log(t),o.json(t)}))},deleteThought({params:t},s){Thought.findOneAndDelete({_id:t.id}).then((t=>{t?s.json(t):s.status(404).json({message:"Not a single thought was found with this ID"})})).catch((t=>s.json(t)))},createReaction({params:t,body:s},o){Thought.findOneAndUpdate({_id:t.thoughtId},{$push:{reactions:s}},{new:!0,runValidators:!0}).then((t=>{t?o.json(t):o.status(404).json({message:"No thoughts was found by this ID"})})).catch((t=>o.json(t)))},deleteReaction({params:t,body:s},o){Thought.findOneAndUpdate({_id:t.thoughtId},{$pull:{reactions:s}},{new:!0}).then((t=>{t?o.json(t):o.status(404).json({message:"Not a single thought was found with this ID"})})).catch((t=>o.json(t)))}};module.exports=thoughtController;